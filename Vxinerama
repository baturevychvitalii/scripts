#!/bin/zsh

. Vglobals
path_to_prev_monit="$PATH_TO_DATA_FOLDER""/xinerama.data";

in_name="eDP";
ex_name="null";
disp="0";
layout="right";

function setup
{
	# check if display exists
	xrandr -d :$disp > /dev/null
	if ! (( $? == 0 )) ; then exit 1; fi

	disps=$(xrandr -d :$disp | grep "connected" | cut -d ' ' -f 1-2);
	# get name of internal monitor
	in_name=$(echo $disps | grep $in_name | cut -d ' ' -f 1);
	echo "internal monitor is $in_name";
	xrandr -d :$disp --output $in_name --primary;

	#remove internal monitor from external monitor options
	disps=$(echo $disps | grep -v "$in_name");

	echo $disps |
	while read -r key_val; do
		if echo "$key_val" | grep -q " connected"; then
			ex_name=$(echo "$key_val" | cut -d ' ' -f 1);
			break;
		fi
	done

	echo "external monitor is $ex_name";

	# if no external monitor is available but user wants to turn it on
	if [ "$ex_name" = "null" ]; then
		layout="null";
	else
		echo "$ex_name" > "$path_to_prev_monit";
	fi
}  

function process_input()
{
	i=1;
	while (( i <= $# )); do
		echo "processing ${@:$i:1}";
		case "${@:$i:1}" in
			"-h")
				echo -e "usage:\n"\
			   	"-d [DISPLAY CODE]\n"\
				"-l [LAYOUT:{left, rigth}]";
				exit 0;
				;;
			"-d")
				((i++));
				if ((i > $# )); then echo "this option requires value"; exit 1; fi

				echo "setting display to ${@:$i:1}";
				disp=${@:$i:1};
				;;
			"-l")
				((i++));
				if ((i > $# )); then echo "this option requires value"; exit 1; fi

				if [ "${@:$i:1}" = "left" ] || [ "${@:$i:1}" = "right" ] || [ "${@:$i:1}" = "null" ]; then
					echo "setting extarnal display layout to '${@:$i:1}'";
					layout="${@:$i:1}";
				else
					echo "unsupported layout ${@:$i:1}";
					exit 1;
				fi
				;;
			*)
				echo "wrong argument ${@:$i:1}";
				exit 1;
		esac

		((i++));
	done
}

function solve_problema
{
	case $layout in
		"null")
			ex_name="$(cat $path_to_prev_monit)";
			echo "turning off $ex_name";
			if [ "$ex_name" != "null" ]; then
				xrandr -d :$disp --output $ex_name --off;
				xrandr -d :$disp --output $in_name --auto;
				echo "null" > $path_to_prev_monit;
			fi
			;;
		"left")
			xrandr -d :$disp --output $ex_name --pos 0x0 --auto;
			xrandr -d :$disp --output $in_name --pos 1920x675 --auto;
			;;
		"right")
			xrandr -d :$disp --output $in_name --pos 0x675 --auto;   
			xrandr -d :$disp --output $ex_name --pos 1366x0 --auto;
			;;
		*)
			echo "some magic happened";
	esac
}

process_input $@;
setup;
solve_problema;

exit 0;
